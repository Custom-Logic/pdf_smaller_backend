openapi: 3.0.3
info:
  title: PDF Smaller API
  description: |
    A simple PDF compression service that provides endpoints for compressing PDF files
    and managing compression jobs. This API focuses on core PDF processing functionality
    without user authentication or session management.
    
    ## Features
    - Single and bulk PDF compression
    - Asynchronous job processing
    - File download capabilities
    - Job status tracking
    - Automatic file cleanup
    
    ## Rate Limiting
    API endpoints are rate-limited to 100 requests per hour for all users.
    
    ## Error Handling
    All errors follow a consistent format with error codes and messages.
    
  version: 1.0.0
  contact:
    name: PDF Smaller Support
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:5000
    description: Development server

paths:
  /api/compress:
    post:
      tags:
        - PDF Compression
      summary: Compress a single PDF file
      description: Upload a PDF file for compression and receive a job ID for tracking
      operationId: compressPdf
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The PDF file to compress
                compressionLevel:
                  type: string
                  enum: [low, medium, high, maximum]
                  default: medium
                  description: Compression level
                imageQuality:
                  type: integer
                  minimum: 10
                  maximum: 100
                  default: 80
                  description: Image quality for compression
              required:
                - file
      responses:
        '202':
          description: Compression job queued successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCreatedResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '413':
          description: File too large
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/compress/bulk:
    post:
      tags:
        - PDF Compression
      summary: Compress multiple PDF files
      description: Upload multiple PDF files for bulk compression
      operationId: compressBulkPdf
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Multiple PDF files to compress
                compressionLevel:
                  type: string
                  enum: [low, medium, high, maximum]
                  default: medium
                  description: Compression level
                imageQuality:
                  type: integer
                  minimum: 10
                  maximum: 100
                  default: 80
                  description: Image quality for compression
              required:
                - files
      responses:
        '202':
          description: Bulk compression job queued successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkJobCreatedResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '413':
          description: Files too large
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/jobs/{job_id}:
    get:
      tags:
        - Job Management
      summary: Get job status
      description: Retrieve the current status and details of a compression job
      operationId: getJobStatus
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: The job ID
      responses:
        '200':
          description: Job status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatusResponse'
        '404':
          description: Job not found
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/jobs/{job_id}/download:
    get:
      tags:
        - Job Management
      summary: Download compressed file
      description: Download the compressed PDF file for a completed job
      operationId: downloadCompressedFile
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: The job ID
      responses:
        '200':
          description: File download successful
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '404':
          description: Job not found or file not available
        '410':
          description: File has been cleaned up and is no longer available
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/health:
    get:
      tags:
        - System
      summary: Health check
      description: Check the health status of the API
      operationId: healthCheck
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  database:
                    type: string
                    example: connected
                  database_type:
                    type: string
                    example: sqlite

components:
  schemas:
    JobCreatedResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        job_id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
        status:
          type: string
          example: "pending"
        message:
          type: string
          example: "Compression job queued successfully"
      required:
        - success
        - job_id
        - status
        - message

    BulkJobCreatedResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        job_id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
        status:
          type: string
          example: "pending"
        message:
          type: string
          example: "Bulk compression job queued successfully"
        file_count:
          type: integer
          example: 3
      required:
        - success
        - job_id
        - status
        - message
        - file_count

    JobStatusResponse:
      type: object
      properties:
        job_id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
        status:
          type: string
          enum: [pending, processing, completed, failed]
          example: "completed"
        task_type:
          type: string
          example: "compression"
        created_at:
          type: string
          format: date-time
          example: "2023-06-15T10:30:00.000Z"
        updated_at:
          type: string
          format: date-time
          example: "2023-06-15T10:31:00.000Z"
        result:
          type: object
          properties:
            original_size:
              type: integer
              example: 1048576
            compressed_size:
              type: integer
              example: 524288
            compression_ratio:
              type: number
              format: float
              example: 50.0
            output_path:
              type: string
              example: "/path/to/compressed/file.pdf"
            original_filename:
              type: string
              example: "document.pdf"
        download_url:
          type: string
          example: "/api/jobs/550e8400-e29b-41d4-a716-446655440000/download"
        error:
          type: string
          example: "Failed to process PDF: Invalid file format"
      required:
        - job_id
        - status
        - task_type
        - created_at
        - updated_at

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Invalid request"
      required:
        - error

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    RateLimitExceeded:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

tags:
  - name: PDF Compression
    description: PDF compression operations
  - name: Job Management
    description: Job status and file download operations
  - name: System
    description: System health and status operations